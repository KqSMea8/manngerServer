[文件路径: tree/expand.html]
<script type="text/javascript">
SyntaxHighlighter.highlight("ts_expand");
</script>
	<div class="barTitle2">
		<div class="content">示例</div>
	</div>
    <hr class="barTitleHr"/>
    <div class="ui-table ui-widget ui-corner-all ui-border">    
<div class="content_wrap">
	<div class="zTreeDemoBackground left">
		<ul id="treeDemo_expand" class="ztree"></ul>
	</div>
	<div class="right">
		<ul class="info">
			<li class="title"><h2>1、beforeCollapse / onCollapse<br/>&nbsp;&nbsp;beforeExpand / onExpand 事件回调函数控制</h2>
				<ul class="list">
				<li>利用 collapse / expand 事件回调函数 可以控制父节点是否允许 展开 / 折叠，这里简单演示如何监控此事件</li>
				<li><p>试试看：<br/>
					&nbsp;&nbsp;&nbsp;&nbsp;<input type="checkbox" id="callbackTrigger" checked /> expandNode 方法是否触发 callback<br/>
					&nbsp;&nbsp;&nbsp;&nbsp;单个节点--[ <a id="expandBtn" href="#" title="不想展开我就不展开你..." onclick="return false;">展开</a> ]
					&nbsp;&nbsp;&nbsp;&nbsp;[ <a id="collapseBtn" href="#" title="不想折叠我就不折叠你..." onclick="return false;">折叠</a> ]
					&nbsp;&nbsp;&nbsp;&nbsp;[ <a id="toggleBtn" href="#" title="你想怎样？..." onclick="return false;">展开 / 折叠 切换</a> ]<br/>
					&nbsp;&nbsp;&nbsp;&nbsp;单个节点（包括子节点）--[ <a id="expandSonBtn" href="#" title="不想展开我就不展开你..." onclick="return false;">展开</a> ]
					&nbsp;&nbsp;&nbsp;&nbsp;[ <a id="collapseSonBtn" href="#" title="不想折叠我就不折叠你..." onclick="return false;">折叠</a> ]<br/>
					&nbsp;&nbsp;&nbsp;&nbsp;全部节点--[ <a id="expandAllBtn" href="#" title="不管你有多NB，统统都要听我的！！" onclick="return false;">展开</a> ]
					&nbsp;&nbsp;&nbsp;&nbsp;[ <a id="collapseAllBtn" href="#" title="不管你有多NB，统统都要听我的！！" onclick="return false;">折叠</a> ]</p>
				<li><p><br/>
					collapse / expand log:<br/>
					<ul id="log_expand" class="log"></ul></p>
				</li>
				</ul>
			</li>

			<li class="title"><h2>2、treeNode 节点数据说明</h2>
				<ul class="list">
				<li>对 节点数据 没有特殊要求，用户可以根据自己的需求添加自定义属性</li>
				</ul>
			</li>
		</ul>
	</div>
</div>
			
			<!--源代码部分start-->
     	<div class="clear"></div>
		<div  class="sourceBar iconPlus mt1"><a href="#source1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;源代码说明</a></div>
		<div  class="code" style="display: none" name="ts_expand">
    <pre class="brush: js;">
html部分:

&lt;ul id=""treeDemo_expand"" class="ztree"&gt;&lt;/ul&gt;

js部分:

var zNodes =[
	{ id:1, pId:0, name:"可折腾的父节点 1", t:"我很普通，随便 展开/折叠 我吧", open:true},
	{ id:11, pId:1, name:"叶子节点 - 1", t:"我老爸很普通，随便折腾他吧"},
	{ id:12, pId:1, name:"可折腾的父节点 2", t:"我和我老爸都很普通，随便折腾我和他吧"},
	{ id:121, pId:12, name:"叶子节点 - 21", t:"我老爸很普通，随便折腾他吧"},
	{ id:122, pId:12, name:"叶子节点 - 22", t:"我老爸很普通，随便折腾他吧"},
	{ id:123, pId:12, name:"叶子节点 - 23", t:"我老爸很普通，随便折腾他吧"},
	{ id:13, pId:1, name:"叶子节点 - 3", t:"我老爸很普通，随便折腾他吧"},
	{ id:2, pId:0, name:"无法折叠的父节点", t:"休想让我折叠起来...除非你用 expandAll 方法", open:true, collapse:false},
	{ id:21, pId:2, name:"叶子节点2 - 1", t:"哈哈哈，我老爸NB吧，不能折叠吧？"},
	{ id:22, pId:2, name:"叶子节点2 - 2", t:"哈哈哈，我老爸NB吧，不能折叠吧？"},
	{ id:23, pId:2, name:"叶子节点2 - 3", t:"哈哈哈，我老爸NB吧，不能折叠吧？"},
	{ id:3, pId:0, name:"无法展开的父节点", t:"就凭你也想展开我？难呀...嘿嘿, 除非你用 expandAll 方法", open:false, expand:false},
	{ id:31, pId:3, name:"叶子节点3 - 1", t:"居然让你看到了...莫非你用了全部节点展开？"},
	{ id:32, pId:3, name:"叶子节点3 - 2", t:"居然让你看到了...莫非你用了全部节点展开？"},
	{ id:33, pId:3, name:"叶子节点3 - 3", t:"居然让你看到了...莫非你用了全部节点展开？"},
	{ id:4, pId:0, name:"空空的父节点 1", t:"一无所有...除了我自己", isParent:true, open:false}
];

  var setting_expand = {
          id:"#treeDemo_expand",
          nodes:zNodes,  //数据节点指定
	view: {
		selectedMulti: false
	}, 
	data: {
		key: {
			title:"t"
		},
		simpleData: {
			enable: true
		}
	},
	callback: {
		beforeClick: beforeClick,
		beforeCollapse: beforeCollapse,
		beforeExpand: beforeExpand,
		onCollapse: onCollapse,
		onExpand: onExpand
	}
};

var log_expand, className = "dark";
function beforeClick(treeId, treeNode) {
	if (treeNode.isParent) {
		return true;
	} else {
		alert("这个 Demo 是用来测试 展开 / 折叠 的...\n\n去点击父节点吧... ");
		return false;
	}
}
function beforeCollapse(treeId, treeNode) {
	className = (className === "dark" ? "":"dark");
	showLog("[ "+getTime()+" beforeCollapse ]&nbsp;&nbsp;&nbsp;&nbsp;" + treeNode.name );
	return (treeNode.collapse !== false);
}
function onCollapse(event, treeId, treeNode) {
	showLog("[ "+getTime()+" onCollapse ]&nbsp;&nbsp;&nbsp;&nbsp;" + treeNode.name);
}		
function beforeExpand(treeId, treeNode) {
	className = (className === "dark" ? "":"dark");
	showLog("[ "+getTime()+" beforeExpand ]&nbsp;&nbsp;&nbsp;&nbsp;" + treeNode.name );
	return (treeNode.expand !== false);
}
function onExpand(event, treeId, treeNode) {
	showLog("[ "+getTime()+" onExpand ]&nbsp;&nbsp;&nbsp;&nbsp;" + treeNode.name);
}
function showLog(str) {
	if (!log_expand) log_expand = $("#log_expand");
	log_expand.append("&lt;li class='"+className+"'&gt;"+str+"&lt;/li&gt;");
	if(log_expand.children("li").length &gt; 8) {
		log_expand.get(0).removeChild(log_expand.children("li")[0]);
	}
}
function getTime() {
	var now= new Date(),
	h=now.getHours(),
	m=now.getMinutes(),
	s=now.getSeconds(),
	ms=now.getMilliseconds();
	return (h+":"+m+":"+s+ " " +ms);
}

function expandNode(e) {
	type = e.data.type,
	nodes = tree.getSelectedNodes();
	if (type.indexOf("All")&lt;0 && nodes.length == 0) {
		alert("请先选择一个父节点");
	}

	if (type == "expandAll") {
		tree.expandAll(true);
	} else if (type == "collapseAll") {
		tree.expandAll(false);
	} else {
		var callbackFlag = $("#callbackTrigger").attr("checked");
		for (var i=0, l=nodes.length; i&lt;l; i++) {
			tree.setting.view.fontCss = {};
			if (type == "expand") {
				tree.expandNode(nodes[i], true, null, null, callbackFlag);
			} else if (type == "collapse") {
				tree.expandNode(nodes[i], false, null, null, callbackFlag);
			} else if (type == "toggle") {
				tree.expandNode(nodes[i], null, null, null, callbackFlag);
			} else if (type == "expandSon") {
				tree.expandNode(nodes[i], true, true, null, callbackFlag);
			} else if (type == "collapseSon") {
				tree.expandNode(nodes[i], false, true, null, callbackFlag);
			}
		}
	}
}
  var tree;
$(document).ready(function(){
	tree = new biz.tree(setting_expand);//创建树
	$("#expandBtn").bind("click", {type:"expand"}, expandNode);
	$("#collapseBtn").bind("click", {type:"collapse"}, expandNode);
	$("#toggleBtn").bind("click", {type:"toggle"}, expandNode);
	$("#expandSonBtn").bind("click", {type:"expandSon"}, expandNode);
	$("#collapseSonBtn").bind("click", {type:"collapseSon"}, expandNode);
	$("#expandAllBtn").bind("click", {type:"expandAll"}, expandNode);
	$("#collapseAllBtn").bind("click", {type:"collapseAll"}, expandNode);
});

           </pre>

       </div>
</div>

       <!--源代码部分end-->

<script type="text/javascript">
var zNodes =[
	{ id:1, pId:0, name:"可折腾的父节点 1", t:"我很普通，随便 展开/折叠 我吧", open:true},
	{ id:11, pId:1, name:"叶子节点 - 1", t:"我老爸很普通，随便折腾他吧"},
	{ id:12, pId:1, name:"可折腾的父节点 2", t:"我和我老爸都很普通，随便折腾我和他吧"},
	{ id:121, pId:12, name:"叶子节点 - 21", t:"我老爸很普通，随便折腾他吧"},
	{ id:122, pId:12, name:"叶子节点 - 22", t:"我老爸很普通，随便折腾他吧"},
	{ id:123, pId:12, name:"叶子节点 - 23", t:"我老爸很普通，随便折腾他吧"},
	{ id:13, pId:1, name:"叶子节点 - 3", t:"我老爸很普通，随便折腾他吧"},
	{ id:2, pId:0, name:"无法折叠的父节点", t:"休想让我折叠起来...除非你用 expandAll 方法", open:true, collapse:false},
	{ id:21, pId:2, name:"叶子节点2 - 1", t:"哈哈哈，我老爸NB吧，不能折叠吧？"},
	{ id:22, pId:2, name:"叶子节点2 - 2", t:"哈哈哈，我老爸NB吧，不能折叠吧？"},
	{ id:23, pId:2, name:"叶子节点2 - 3", t:"哈哈哈，我老爸NB吧，不能折叠吧？"},
	{ id:3, pId:0, name:"无法展开的父节点", t:"就凭你也想展开我？难呀...嘿嘿, 除非你用 expandAll 方法", open:false, expand:false},
	{ id:31, pId:3, name:"叶子节点3 - 1", t:"居然让你看到了...莫非你用了全部节点展开？"},
	{ id:32, pId:3, name:"叶子节点3 - 2", t:"居然让你看到了...莫非你用了全部节点展开？"},
	{ id:33, pId:3, name:"叶子节点3 - 3", t:"居然让你看到了...莫非你用了全部节点展开？"},
	{ id:4, pId:0, name:"空空的父节点 1", t:"一无所有...除了我自己", isParent:true, open:false}
];

  var setting_expand = {
          id:"#treeDemo_expand",
          nodes:zNodes,  //数据节点指定
	view: {
		selectedMulti: false
	}, 
	data: {
		key: {
			title:"t"
		},
		simpleData: {
			enable: true
		}
	},
	callback: {
		beforeClick: beforeClick,
		beforeCollapse: beforeCollapse,
		beforeExpand: beforeExpand,
		onCollapse: onCollapse,
		onExpand: onExpand
	}
};

var log_expand, className = "dark";
function beforeClick(treeId, treeNode) {
	if (treeNode.isParent) {
		return true;
	} else {
		alert("这个 Demo 是用来测试 展开 / 折叠 的...\n\n去点击父节点吧... ");
		return false;
	}
}
function beforeCollapse(treeId, treeNode) {
	className = (className === "dark" ? "":"dark");
	showLog("[ "+getTime()+" beforeCollapse ]&nbsp;&nbsp;&nbsp;&nbsp;" + treeNode.name );
	return (treeNode.collapse !== false);
}
function onCollapse(event, treeId, treeNode) {
	showLog("[ "+getTime()+" onCollapse ]&nbsp;&nbsp;&nbsp;&nbsp;" + treeNode.name);
}		
function beforeExpand(treeId, treeNode) {
	className = (className === "dark" ? "":"dark");
	showLog("[ "+getTime()+" beforeExpand ]&nbsp;&nbsp;&nbsp;&nbsp;" + treeNode.name );
	return (treeNode.expand !== false);
}
function onExpand(event, treeId, treeNode) {
	showLog("[ "+getTime()+" onExpand ]&nbsp;&nbsp;&nbsp;&nbsp;" + treeNode.name);
}
function showLog(str) {
	if (!log_expand) log_expand = $("#log_expand");
	log_expand.append("<li class='"+className+"'>"+str+"</li>");
	if(log_expand.children("li").length > 8) {
		log_expand.get(0).removeChild(log_expand.children("li")[0]);
	}
}
function getTime() {
	var now= new Date(),
	h=now.getHours(),
	m=now.getMinutes(),
	s=now.getSeconds(),
	ms=now.getMilliseconds();
	return (h+":"+m+":"+s+ " " +ms);
}

function expandNode(e) {
	type = e.data.type,
	nodes = tree.getSelectedNodes();
	if (type.indexOf("All")<0 && nodes.length == 0) {
		alert("请先选择一个父节点");
	}

	if (type == "expandAll") {
		tree.expandAll(true);
	} else if (type == "collapseAll") {
		tree.expandAll(false);
	} else {
		var callbackFlag = $("#callbackTrigger").attr("checked");
		for (var i=0, l=nodes.length; i<l; i++) {
			tree.setting.view.fontCss = {};
			if (type == "expand") {
				tree.expandNode(nodes[i], true, null, null, callbackFlag);
			} else if (type == "collapse") {
				tree.expandNode(nodes[i], false, null, null, callbackFlag);
			} else if (type == "toggle") {
				tree.expandNode(nodes[i], null, null, null, callbackFlag);
			} else if (type == "expandSon") {
				tree.expandNode(nodes[i], true, true, null, callbackFlag);
			} else if (type == "collapseSon") {
				tree.expandNode(nodes[i], false, true, null, callbackFlag);
			}
		}
	}
}
  var tree;
$(document).ready(function(){
	tree = new biz.tree(setting_expand);//创建树
	$("#expandBtn").bind("click", {type:"expand"}, expandNode);
	$("#collapseBtn").bind("click", {type:"collapse"}, expandNode);
	$("#toggleBtn").bind("click", {type:"toggle"}, expandNode);
	$("#expandSonBtn").bind("click", {type:"expandSon"}, expandNode);
	$("#collapseSonBtn").bind("click", {type:"collapseSon"}, expandNode);
	$("#expandAllBtn").bind("click", {type:"expandAll"}, expandNode);
	$("#collapseAllBtn").bind("click", {type:"collapseAll"}, expandNode);
});

</script>
