package com.lmxf.post.service.dataSynch;

import java.util.Map;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import com.lmxf.post.core.utils.GConstent;
import com.lmxf.post.core.utils.GParameter;
import com.lmxf.post.entity.vending.VendingCmd;
import com.lmxf.post.repository.vending.VendingCmdDao;
import com.lmxf.post.service.core.TradeProcess;
import com.lmxf.post.tradepkg.dataSynch.VendingCmdConfirmReq;
import com.lmxf.post.tradepkg.dataSynch.VendingCmdConfirmResp;

public class TradeVendingCmdConfirmService extends TradeProcess {
	private final static Log log = LogFactory.getLog(TradeVendingCmdConfirmService.class);
	private VendingCmdConfirmReq vendingCmdConfirmReq;
	private VendingCmdConfirmResp vendingCmdConfirmResp;
	private VendingCmdDao vendingCmdDao;
	
	@SuppressWarnings("rawtypes")
	public String tradeProcess(String apply_xml) {
		Map ret = null;
		VendingCmd vendingCmd = null;
		try {
			ret = vendingCmdConfirmReq.parseXml(apply_xml);
			if (ret.get("code") == null) {
				return errorCodeDao.getErrorRespJson(GConstent.Xml_Parse_Error);
			} else if (ret.get("code") != null && Integer.parseInt(ret.get("code").toString()) != 0) {
				log.error("vendingCmdConfirmReq.parseXml is error!");
				return errorCodeDao.getErrorRespJson(Integer.parseInt(ret.get("code").toString()));
			}
		} catch (Exception e) {
			log.error("---parseXml  error-----", e);
			return errorCodeDao.getErrorRespJson(GConstent.Xml_Parse_Error);
		}
		
		vendingCmd = (VendingCmd) ret.get("vendingCmd");
		VendingCmd vendingCmdR = vendingCmdDao.findByCmdId(vendingCmd.getCmdId());
		if(null == vendingCmdR){
			return errorCodeDao.getErrorRespJson(GConstent.Vending_Cmd_No_Found);
		}
		if(vendingCmdR.getState().equals(GParameter.vendingCmd_success)){
			return errorCodeDao.getErrorRespJson(GConstent.Repeat_Confirm_Error);
		}
		vendingCmdR.setState(vendingCmd.getState());
		vendingCmdR.setResult(vendingCmd.getResult());
		vendingCmdR.setStateTime(vendingCmd.getStateTime());
		int r=vendingCmdDao.update(vendingCmdR);
		if(r < 0){
			return errorCodeDao.getErrorRespJson(GConstent.Confirm_Failed_Error);
		}
		return vendingCmdConfirmResp.CreateJson(GConstent.SUCCESS_CODE, GConstent.SUCCESS_MSG, 1, 1, vendingCmdR);
	}

	public void setVendingCmdConfirmReq(VendingCmdConfirmReq vendingCmdConfirmReq) {
		this.vendingCmdConfirmReq = vendingCmdConfirmReq;
	}

	public void setVendingCmdConfirmResp(VendingCmdConfirmResp vendingCmdConfirmResp) {
		this.vendingCmdConfirmResp = vendingCmdConfirmResp;
	}

	public void setVendingCmdDao(VendingCmdDao vendingCmdDao) {
		this.vendingCmdDao = vendingCmdDao;
	}
	
}
