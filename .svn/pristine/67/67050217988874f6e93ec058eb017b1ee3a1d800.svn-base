[文件路径: tree/standardData.html]
<script type="text/javascript">
SyntaxHighlighter.highlight("ts_standardData");
</script>
	<!-- 示例1 -->
	<div class="barTitle2">
		<div class="content">示例</div>
	</div>
    <hr class="barTitleHr"/>
    <div class="ui-table ui-widget ui-corner-all ui-border">    
		  <div class="content_wrap">
				<div class="zTreeDemoBackground left">
					<ul id="treeDemo_standard" class="ztree" ></ul>
				</div>
				<div class="right">
					<ul class="info">
						<li class="title"><h2>1、setting 配置信息说明</h2>
							<ul class="list">
							<li>只需指定容器id和数据来源</li>
							</ul>
						</li>
						<li class="title"><h2>2、treeNode 节点数据说明</h2>
							<ul class="list">
							<li class="highlight_red">标准的 JSON 数据需要嵌套表示节点的父子包含关系
<div>
<pre xmlns="">
<code>
例如：
var nodes = [
	{name: "父节点1", children: [
		{name: "子节点1"},
		{name: "子节点2"}
	]}
];
</code>
</pre>
</div>
							</li>
							<li>默认展开的节点，请设置 treeNode.open 属性</li>
							<li>无子节点的父节点，请设置 treeNode.isParent 属性</li>
						
							</ul>
						</li>
					</ul>
				</div>
			</div>
			
			<!--源代码部分start-->
     	<div class="clear"></div>
		<div  class="sourceBar iconPlus mt1"><a href="#source1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;源代码说明</a></div>
		<div  class="code" style="display: none"  name="ts_standardData">
<pre class="brush: js;">
html部分:

&lt;ul id="treeDemo_standard" class="ztree"&gt;&lt;/ul&gt;

js部分:

     var zNodes_standard =[//树节点数据
			{ name:"父节点1 - 展开", open:true,
				children: [
					{ name:"父节点11 - 折叠",
						children: [
							{ name:"叶子节点111"},
							{ name:"叶子节点112"},
							{ name:"叶子节点113"},
							{ name:"叶子节点114"}
						]},
					{ name:"父节点12 - 折叠",
						children: [
							{ name:"叶子节点121"},
							{ name:"叶子节点122"},
							{ name:"叶子节点123"},
							{ name:"叶子节点124"}
						]},
					{ name:"父节点13 - 没有子节点", isParent:true}
				]},
			{ name:"父节点2 - 折叠",
				children: [
					{ name:"父节点21 - 展开", open:true,
						children: [
							{ name:"叶子节点211"},
							{ name:"叶子节点212"},
							{ name:"叶子节点213"},
							{ name:"叶子节点214"}
						]},
					{ name:"父节点22 - 折叠",
						children: [
							{ name:"叶子节点221"},
							{ name:"叶子节点222"},
							{ name:"叶子节点223"},
							{ name:"叶子节点224"}
						]},
					{ name:"父节点23 - 折叠",
						children: [
							{ name:"叶子节点231"},
							{ name:"叶子节点232"},
							{ name:"叶子节点233"},
							{ name:"叶子节点234"}
						]}
				]},
			{ name:"父节点3 - 没有子节点", isParent:true}

		];
       var setting_standard = {
            id:"#treeDemo_standard",//容器id
            nodes:zNodes_standard  //数据节点指定
		};

var tempobj = new biz.tree(setting_standard);//创建树
           </pre>

       </div>
</div>

       <!--源代码部分end-->

<script type="text/javascript">
		var zNodes_standard =[
			{ name:"父节点1 - 展开", open:true,
				children: [
					{ name:"父节点11 - 折叠",
						children: [
							{ name:"叶子节点111"},
							{ name:"叶子节点112"},
							{ name:"叶子节点113"},
							{ name:"叶子节点114"}
						]},
					{ name:"父节点12 - 折叠",
						children: [
							{ name:"叶子节点121"},
							{ name:"叶子节点122"},
							{ name:"叶子节点123"},
							{ name:"叶子节点124"}
						]},
					{ name:"父节点13 - 没有子节点", isParent:true}
				]},
			{ name:"父节点2 - 折叠",
				children: [
					{ name:"父节点21 - 展开", open:true,
						children: [
							{ name:"叶子节点211"},
							{ name:"叶子节点212"},
							{ name:"叶子节点213"},
							{ name:"叶子节点214"}
						]},
					{ name:"父节点22 - 折叠",
						children: [
							{ name:"叶子节点221"},
							{ name:"叶子节点222"},
							{ name:"叶子节点223"},
							{ name:"叶子节点224"}
						]},
					{ name:"父节点23 - 折叠",
						children: [
							{ name:"叶子节点231"},
							{ name:"叶子节点232"},
							{ name:"叶子节点233"},
							{ name:"叶子节点234"}
						]}
				]},
			{ name:"父节点3 - 没有子节点", isParent:true}

		];
       var setting_standard = {
            id:"#treeDemo_standard",
            nodes:zNodes_standard
		};

		var tempobj = new biz.tree(setting_standard);

</script>
