[文件路径: tree/checkbox_count.html]
<script type="text/javascript">
SyntaxHighlighter.highlight("ts_checkbox_count");
</script>
	<!-- 示例1 -->
	<div class="barTitle2">
		<div class="content">示例</div>
	</div>
    <hr class="barTitleHr"/>
    <div class="ui-table ui-widget ui-corner-all ui-border">    
<div class="content_wrap">
	<div class="zTreeDemoBackground left">
		<ul id="treeDemo_checkbox_count" class="ztree"></ul>
	</div>
	<div class="right">
		<ul class="info">
			<li class="title"><h2>1、getChangeCheckedNodes / getCheckedNodes 方法操作说明</h2>
				<ul class="list">
				<li class="highlight_red">使用 zTreeObj.getChangeCheckedNodes / getCheckedNodes 方法.</li>
				<li><p>去勾选 checkbox 比较下面的数字变化：<br/>
					<ul id="log_checkbox_count" class="log" style="height:110px;">
						<li>当前被勾选的节点共 <span id="checkCount" class="highlight_red"></span> 个</li>
						<li>当前未被勾选的节点共 <span id="nocheckCount" class="highlight_red"></span> 个</li>
						<li>勾选状态对比规则：<input type="radio" id="init" name="stateType" class="radio first" checked /><span>与初始化时对比</span><br/>
							<input type="radio" id="last" name="stateType" class="radio first" style="margin-left:108px;"/><span>与上一次勾选后对比</span></li>
						<li>当前被修改勾选状态的节点共 <span id="changeCount" class="highlight_red"></span> 个</li>
					</ul></p>
				</li>
				</ul>
			</li>
			<li class="title"><h2>2、setting 配置信息说明</h2>
				<ul class="list">
				<li>同 "checkbox 勾选操作" 中的说明</li>
				</ul>
			</li>
			<li class="title"><h2>3、treeNode 节点数据说明</h2>
				<ul class="list">
				<li>同 "checkbox 勾选操作" 中的说明</li>
				</ul>
			</li>
		</ul>
	</div>
</div>
			
			<!--源代码部分start-->
     	<div class="clear"></div>
		<div  class="sourceBar iconPlus mt1"><a href="#source1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;源代码说明</a></div>
		<div  class="code" style="display: none" name="ts_checkbox_count">
    <pre class="brush: js;">
html部分:

&lt;ul id="treeDemo_checkbox_count" class="ztree"&gt;&lt;/ul&gt;

js部分:

var zNodes =[
	{ id:1, pId:0, name:"随意勾选 1", open:true},
	{ id:11, pId:1, name:"随意勾选 1-1"},
	{ id:12, pId:1, name:"随意勾选  1-2", open:true},
	{ id:121, pId:12, name:"随意勾选 1-2-1", checked:true},
	{ id:122, pId:12, name:"随意勾选 1-2-2"},
	{ id:123, pId:12, name:"随意勾选 1-2-3"},
	{ id:13, pId:1, name:"随意勾选 1-3"},
	{ id:2, pId:0, name:"随意勾选 2", open:true},
	{ id:21, pId:2, name:"随意勾选 2-1"},
	{ id:22, pId:2, name:"随意勾选 2-2", open:true},
	{ id:221, pId:22, name:"随意勾选 2-2-1", checked:true},
	{ id:222, pId:22, name:"随意勾选 2-2-2"},
	{ id:223, pId:22, name:"随意勾选 2-2-3"},
	{ id:23, pId:2, name:"随意勾选 2-3", checked:true}
];

var clearFlag = false;
function onCheck(e, treeId, treeNode) {
	count();
	if (clearFlag) {
		clearCheckedOldNodes();
	}
}
function clearCheckedOldNodes() {
	nodes = treeDemo.getChangeCheckedNodes();
	for (var i=0, l=nodes.length; i&lt;l; i++) {
		nodes[i].checkedOld = nodes[i].checked;
	}
}
function count() {
	
	var checkCount = treeDemo.getCheckedNodes(true).length;
	var nocheckCount = treeDemo.getCheckedNodes(false).length;
	var  changeCount = treeDemo.getChangeCheckedNodes().length;
	$("#checkCount").text(checkCount);
	$("#nocheckCount").text(nocheckCount);
	$("#changeCount").text(changeCount);

}
var setting_checkbox_count = {
    id:"#treeDemo_checkbox_count",
    nodes:zNodes,  //数据节点指定
	view: {
		selectedMulti: false
	},
	check: {
		enable: true
	},
	data: {
		simpleData: {
			enable: true
		}
	},
	callback: {
		onCheck: onCheck
	}
};
var treeDemo;
function createTree() {
    treeDemo =  new biz.tree(setting_checkbox_count);//创建树
	count();
	clearFlag = $("#last").attr("checked");
}

$(document).ready(function(){
	createTree();			
	$("#init").bind("change", createTree);
	$("#last").bind("change", createTree);
});
           </pre>

       </div>
</div>

       <!--源代码部分end-->

<script type="text/javascript">
var zNodes =[
	{ id:1, pId:0, name:"随意勾选 1", open:true},
	{ id:11, pId:1, name:"随意勾选 1-1"},
	{ id:12, pId:1, name:"随意勾选  1-2", open:true},
	{ id:121, pId:12, name:"随意勾选 1-2-1", checked:true},
	{ id:122, pId:12, name:"随意勾选 1-2-2"},
	{ id:123, pId:12, name:"随意勾选 1-2-3"},
	{ id:13, pId:1, name:"随意勾选 1-3"},
	{ id:2, pId:0, name:"随意勾选 2", open:true},
	{ id:21, pId:2, name:"随意勾选 2-1"},
	{ id:22, pId:2, name:"随意勾选 2-2", open:true},
	{ id:221, pId:22, name:"随意勾选 2-2-1", checked:true},
	{ id:222, pId:22, name:"随意勾选 2-2-2"},
	{ id:223, pId:22, name:"随意勾选 2-2-3"},
	{ id:23, pId:2, name:"随意勾选 2-3", checked:true}
];

var clearFlag = false;
function onCheck(e, treeId, treeNode) {
	count();
	if (clearFlag) {
		clearCheckedOldNodes();
	}
}
function clearCheckedOldNodes() {
	nodes = treeDemo.getChangeCheckedNodes();
	for (var i=0, l=nodes.length; i<l; i++) {
		nodes[i].checkedOld = nodes[i].checked;
	}
}
function count() {
	
	var checkCount = treeDemo.getCheckedNodes(true).length;
	var nocheckCount = treeDemo.getCheckedNodes(false).length;
	var  changeCount = treeDemo.getChangeCheckedNodes().length;
	$("#checkCount").text(checkCount);
	$("#nocheckCount").text(nocheckCount);
	$("#changeCount").text(changeCount);

}
var setting_checkbox_count = {
    id:"#treeDemo_checkbox_count",
    nodes:zNodes,  //数据节点指定
	view: {
		selectedMulti: false
	},
	check: {
		enable: true
	},
	data: {
		simpleData: {
			enable: true
		}
	},
	callback: {
		onCheck: onCheck
	}
};
var treeDemo;
function createTree() {
    treeDemo =  new biz.tree(setting_checkbox_count);//创建树
	count();
	clearFlag = $("#last").attr("checked");
}

$(document).ready(function(){
	createTree();			
	$("#init").bind("change", createTree);
	$("#last").bind("change", createTree);
});
</script>
