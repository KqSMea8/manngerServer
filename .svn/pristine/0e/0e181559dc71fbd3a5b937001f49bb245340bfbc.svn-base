[文件路径: tree/radio_fun.html]
<script type="text/javascript">
SyntaxHighlighter.highlight("ts_radio_fun");
</script>
	<!-- 示例1 -->
	<div class="barTitle2">
		<div class="content">示例</div>
	</div>
    <hr class="barTitleHr"/>
    <div class="ui-table ui-widget ui-corner-all ui-border">    
<div class="content_wrap">
	<div class="zTreeDemoBackground left">
		<ul id="treeDemo_radio_fun" class="ztree"></ul>
	</div>
	<div class="right">
		<ul class="info">
			<li class="title"><h2>1、beforeCheck / onCheck 事件回调函数控制</h2>
				<ul class="list">
				<li>利用 beforeCheck / onCheck 事件回调函数 可以控制是否允许 更改 节点勾选状态，这里简单演示如何监控此事件</li>
				<li><p>试试看：<br/>
					&nbsp;&nbsp;&nbsp;&nbsp;<input type="checkbox" id="callbackTrigger" checked /> checkNode 方法是否触发 callback<br/>
					&nbsp;&nbsp;&nbsp;&nbsp;[ <a id="checkTrue" href="#" title="不想勾选我就不勾选你..." onclick="return false;">勾选</a> ]
					&nbsp;&nbsp;&nbsp;&nbsp;[ <a id="checkFalse" href="#" title="不想取消勾选我就不取消你..." onclick="return false;">取消勾选</a> ]</p>
				<li><p>
					beforeCheck / onCheck log:<br/>
					<ul id="log_radio_fun" class="log" style="height:130px;"></ul></p>
				</li>
				</ul>
			</li>
			<li class="title"><h2>2、setting 配置信息说明</h2>
				<ul class="list">
				<li>同 "radio 勾选操作" 中的说明</li>
				</ul>
			</li>
			<li class="title"><h2>3、treeNode 节点数据说明</h2>
				<ul class="list">
				<li>同 "radio 勾选操作" 中的说明</li>
				</ul>
			</li>
		</ul>
	</div>
</div>
			
			<!--源代码部分start-->
     	<div class="clear"></div>
		<div  class="sourceBar iconPlus mt1"><a href="#source1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;源代码说明</a></div>
		<div  class="code" style="display: none" name="ts_radio_fun">
<pre class="brush: js;">
html部分:

&lt;ul id="treeDemo_radio_fun" class="ztree"&gt;&lt;/ul&gt;

js部分:

var zNodes =[
	{ id:1, pId:0, name:"随意勾选 1", open:true},
	{ id:11, pId:1, name:"无 radio 1-1", nocheck:true},
	{ id:12, pId:1, name:"随意勾选 1-2", open:true},
	{ id:121, pId:12, name:"随意勾选 1-2-1"},
	{ id:122, pId:12, name:"随意勾选 1-2-2"},
	{ id:123, pId:12, name:"无 radio 1-2-3", nocheck:true},
	{ id:13, pId:1, name:"随意勾选 1-3"},
	{ id:2, pId:0, name:"禁止勾选 2", open:true, doCheck:false},
	{ id:21, pId:2, name:"禁止勾选 2-1", doCheck:false},
	{ id:22, pId:2, name:"禁止勾选 2-2", checked:true, open:true, doCheck:false},
	{ id:221, pId:22, name:"禁止勾选 2-2-1", doCheck:false},
	{ id:222, pId:22, name:"禁止勾选 2-2-2", checked:true, doCheck:false},
	{ id:223, pId:22, name:"禁止勾选 2-2-3", doCheck:false},
	{ id:23, pId:2, name:"禁止勾选 2-3", doCheck:false}
];

var code, log_radio_fun, className = "dark";
function beforeCheck(treeId, treeNode) {
	className = (className === "dark" ? "":"dark");
	showLog("[ "+getTime()+" beforeCheck ]&nbsp;&nbsp;&nbsp;&nbsp;" + treeNode.name );
	return (treeNode.doCheck !== false);
}
function onCheck(e, treeId, treeNode) {
	showLog("[ "+getTime()+" onCheck ]&nbsp;&nbsp;&nbsp;&nbsp;" + treeNode.name );
}		
function showLog(str) {
	if (!log_radio_fun) log_radio_fun = $("#log_radio_fun");
	log_radio_fun.append("&lt;li class='"+className+"'&gt;"+str+"&lt;/li&gt;");
	if(log_radio_fun.children("li").length &gt; 6) {
		log_radio_fun.get(0).removeChild(log_radio_fun.children("li")[0]);
	}
}
function getTime() {
	var now= new Date(),
	h=now.getHours(),
	m=now.getMinutes(),
	s=now.getSeconds(),
	ms=now.getMilliseconds();
	return (h+":"+m+":"+s+ " " +ms);
}

function checkNode(e) {
	type = e.data.type,
	nodes = treeDemo_radio_fun.getSelectedNodes();
	if (type.indexOf("All")&lt;0 && nodes.length == 0) {
		alert("请先选择一个节点");
	}

	if (type == "checkAllTrue") {
		treeDemo_radio_fun.checkAllNodes(true);
	} else if (type == "checkAllFalse") {
		treeDemo_radio_fun.checkAllNodes(false);
	} else {
		var callbackFlag = $("#callbackTrigger").attr("checked");
		for (var i=0, l=nodes.length; i&lt;l; i++) {
			if (type == "checkTrue") {
				treeDemo_radio_fun.checkNode(nodes[i], true, null, callbackFlag);
			} else if (type == "checkFalse") {
				treeDemo_radio_fun.checkNode(nodes[i], false, null, callbackFlag);
			}else if (type == "checkTruePS") {
				treeDemo_radio_fun.checkNode(nodes[i], true, true, callbackFlag);
			} else if (type == "checkFalsePS") {
				treeDemo_radio_fun.checkNode(nodes[i], false, true, callbackFlag);
			}
		}
	}
}
var setting_radio_fun = {
    id:"#treeDemo_radio_fun",
    nodes:zNodes,  //数据节点指定
	view: {
		selectedMulti: false
	},
	check: {
		enable: true,
		chkStyle: "radio",
		radioType: "level"
	},
	data: {
		simpleData: {
			enable: true
		}
	},
	callback: {
		beforeCheck: beforeCheck,
		onCheck: onCheck
	}
};
var treeDemo_radio_fun;
$(document).ready(function(){
	treeDemo_radio_fun =  new biz.tree(setting_radio_fun);//创建树
	$("#checkTrue").bind("click", {type:"checkTrue"}, checkNode);
	$("#checkFalse").bind("click", {type:"checkFalse"}, checkNode);
});
           </pre>

       </div>
</div>

       <!--源代码部分end-->

<script type="text/javascript">
var zNodes =[
	{ id:1, pId:0, name:"随意勾选 1", open:true},
	{ id:11, pId:1, name:"无 radio 1-1", nocheck:true},
	{ id:12, pId:1, name:"随意勾选 1-2", open:true},
	{ id:121, pId:12, name:"随意勾选 1-2-1"},
	{ id:122, pId:12, name:"随意勾选 1-2-2"},
	{ id:123, pId:12, name:"无 radio 1-2-3", nocheck:true},
	{ id:13, pId:1, name:"随意勾选 1-3"},
	{ id:2, pId:0, name:"禁止勾选 2", open:true, doCheck:false},
	{ id:21, pId:2, name:"禁止勾选 2-1", doCheck:false},
	{ id:22, pId:2, name:"禁止勾选 2-2", checked:true, open:true, doCheck:false},
	{ id:221, pId:22, name:"禁止勾选 2-2-1", doCheck:false},
	{ id:222, pId:22, name:"禁止勾选 2-2-2", checked:true, doCheck:false},
	{ id:223, pId:22, name:"禁止勾选 2-2-3", doCheck:false},
	{ id:23, pId:2, name:"禁止勾选 2-3", doCheck:false}
];

var code, log_radio_fun, className = "dark";
function beforeCheck(treeId, treeNode) {
	className = (className === "dark" ? "":"dark");
	showLog("[ "+getTime()+" beforeCheck ]&nbsp;&nbsp;&nbsp;&nbsp;" + treeNode.name );
	return (treeNode.doCheck !== false);
}
function onCheck(e, treeId, treeNode) {
	showLog("[ "+getTime()+" onCheck ]&nbsp;&nbsp;&nbsp;&nbsp;" + treeNode.name );
}		
function showLog(str) {
	if (!log_radio_fun) log_radio_fun = $("#log_radio_fun");
	log_radio_fun.append("<li class='"+className+"'>"+str+"</li>");
	if(log_radio_fun.children("li").length > 6) {
		log_radio_fun.get(0).removeChild(log_radio_fun.children("li")[0]);
	}
}
function getTime() {
	var now= new Date(),
	h=now.getHours(),
	m=now.getMinutes(),
	s=now.getSeconds(),
	ms=now.getMilliseconds();
	return (h+":"+m+":"+s+ " " +ms);
}

function checkNode(e) {
	type = e.data.type,
	nodes = treeDemo_radio_fun.getSelectedNodes();
	if (type.indexOf("All")<0 && nodes.length == 0) {
		alert("请先选择一个节点");
	}

	if (type == "checkAllTrue") {
		treeDemo_radio_fun.checkAllNodes(true);
	} else if (type == "checkAllFalse") {
		treeDemo_radio_fun.checkAllNodes(false);
	} else {
		var callbackFlag = $("#callbackTrigger").attr("checked");
		for (var i=0, l=nodes.length; i<l; i++) {
			if (type == "checkTrue") {
				treeDemo_radio_fun.checkNode(nodes[i], true, null, callbackFlag);
			} else if (type == "checkFalse") {
				treeDemo_radio_fun.checkNode(nodes[i], false, null, callbackFlag);
			}else if (type == "checkTruePS") {
				treeDemo_radio_fun.checkNode(nodes[i], true, true, callbackFlag);
			} else if (type == "checkFalsePS") {
				treeDemo_radio_fun.checkNode(nodes[i], false, true, callbackFlag);
			}
		}
	}
}
var setting_radio_fun = {
    id:"#treeDemo_radio_fun",
    nodes:zNodes,  //数据节点指定
	view: {
		selectedMulti: false
	},
	check: {
		enable: true,
		chkStyle: "radio",
		radioType: "level"
	},
	data: {
		simpleData: {
			enable: true
		}
	},
	callback: {
		beforeCheck: beforeCheck,
		onCheck: onCheck
	}
};
var treeDemo_radio_fun;
$(document).ready(function(){
	treeDemo_radio_fun =  new biz.tree(setting_radio_fun);//创建树
	$("#checkTrue").bind("click", {type:"checkTrue"}, checkNode);
	$("#checkFalse").bind("click", {type:"checkFalse"}, checkNode);
});
</script>
